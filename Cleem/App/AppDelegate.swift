import Foundation
import UIKit
import SwiftUI
import CoreData
// –£–¥–∞–ª—è–µ–º —É—Å–ª–æ–≤–Ω—ã–π –∏–º–ø–æ—Ä—Ç
// #if canImport(GoogleSignIn)
// import GoogleSignIn
// #endif

// Ensure GoogleSignInURLHandler is available
// This is a custom import for the App.swift file where GoogleSignInURLHandler is defined

// AppDelegate to handle application lifecycle events
class AppDelegate: NSObject, ObservableObject, UIApplicationDelegate {
    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {
        print("AppDelegate: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ")
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è GoogleSignIn
        print("AppDelegate: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è GoogleSignInLinker")
        GoogleSignInLinker.shared.registerClasses()
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ use_new_recognition –≤ true –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        UserDefaults.standard.set(true, forKey: "use_new_recognition")
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è API –∫–ª—é—á–µ–π —Ç–æ–ª—å–∫–æ –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        FoodRecognitionManagerV2.initializeApiKeys()
        
        // –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π UIFont –±–µ–∑ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –∑–Ω–∞–∫–æ–≤
        setupCustomFont()
        
        // Configure Logging
        setupLogger()
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        initializeUserDefaults()
        
        // Debug CoreData - –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–æ–¥—É–∫—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
        debugCheckFoodItems()
        
        return true
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ URL –¥–ª—è Google Sign-In
    func application(_ app: UIApplication, open url: URL, options: [UIApplication.OpenURLOptionsKey: Any] = [:]) -> Bool {
        print("AppDelegate: –û–±—Ä–∞–±–æ—Ç–∫–∞ URL \(url)")
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º GoogleSignInURLHandler –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ URL
        return GoogleSignInURLHandler.shared.handleURL(app, open: url, options: options)
    }
    
    func applicationWillTerminate(_ application: UIApplication) {
        print("AppDelegate: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ")
        // Save CoreData context
        CoreDataManager.shared.saveContext()
    }
    
    func applicationDidEnterBackground(_ application: UIApplication) {
        print("AppDelegate: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Ö–æ–¥–∏—Ç –≤ —Ñ–æ–Ω, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ")
        // Save CoreData context
        CoreDataManager.shared.saveContext()
    }
    
    func applicationWillResignActive(_ application: UIApplication) {
        print("AppDelegate: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ç–µ—Ä—è–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ")
        // Save CoreData context
        CoreDataManager.shared.saveContext()
    }
    
    // –ú–µ—Ç–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ UIFont –±–µ–∑ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –∑–Ω–∞–∫–æ–≤
    private func setupCustomFont() {
        print("AppDelegate: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —à—Ä–∏—Ñ—Ç–∞")
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —à—Ä–∏—Ñ—Ç, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
        // –ù–∞–ø—Ä–∏–º–µ—Ä:
        // UIFont.familyNames.forEach { print($0) }
    }
    
    // –ú–µ—Ç–æ–¥ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    private func setupLogger() {
        print("AppDelegate: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è")
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    }
    
    // –ú–µ—Ç–æ–¥ –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ UserDefaults
    private func initializeUserDefaults() {
        print("AppDelegate: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UserDefaults")
        
        // –í—Å–µ–≥–¥–∞ —É–¥–∞–ª—è–µ–º lastAppleImage –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        UserDefaults.standard.removeObject(forKey: "lastAppleImage")
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º foodHistory
        if UserDefaults.standard.object(forKey: "foodHistory") == nil {
            print("AppDelegate: –°–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ foodHistory –≤ UserDefaults")
            UserDefaults.standard.set([], forKey: "foodHistory")
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –æ –µ–¥–µ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        if let foodHistory = UserDefaults.standard.array(forKey: "foodHistory") as? [[String: Any]] {
            print("AppDelegate: foodHistory —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–∞–π–¥–µ–Ω–æ \(foodHistory.count) –∑–∞–ø–∏—Å–µ–π")
            
            // –§–∏–ª—å—Ç—Ä—É–µ–º —è–±–ª–æ–∫–∏ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            var filteredFoodHistory = foodHistory
            let initialCount = filteredFoodHistory.count
            
            // –£–¥–∞–ª—è–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ —Å "apple" –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —è–≤–ª—è—é—Ç—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–º –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø—Ä–æ–¥—É–∫—Ç–æ–º
            let lastScannedFoodID = UserDefaults.standard.string(forKey: "lastScannedFoodID")
            filteredFoodHistory.removeAll { item in
                if let name = item["name"] as? String,
                   name.lowercased() == "apple",
                   let id = item["id"] as? String,
                   id != lastScannedFoodID {
                    print("AppDelegate: üçé –£–¥–∞–ª—è–µ–º Apple –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ –µ–¥—ã –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
                    return true
                }
                return false
            }
            
            // –ï—Å–ª–∏ –º—ã —É–¥–∞–ª–∏–ª–∏ —è–±–ª–æ–∫–∏ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é
            if initialCount != filteredFoodHistory.count {
                UserDefaults.standard.set(filteredFoodHistory, forKey: "foodHistory")
                UserDefaults.standard.synchronize()
                print("AppDelegate: –£–¥–∞–ª–µ–Ω–æ \(initialCount - filteredFoodHistory.count) —è–±–ª–æ–∫ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ –µ–¥—ã")
            }
        } else {
            print("AppDelegate: –û—à–∏–±–∫–∞ - foodHistory –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ UserDefaults –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏")
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –ª–∏ –¥–∞–Ω–Ω—ã–µ
        UserDefaults.standard.synchronize()
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ - –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    private func debugCheckFoodItems() {
        DispatchQueue.main.async {
            let context = CoreDataManager.shared.context
            let fetchRequest: NSFetchRequest<Food> = Food.fetchRequest()
            
            do {
                let foods = try context.fetch(fetchRequest)
                print("DEBUG - –ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ –Ω–∞–π–¥–µ–Ω–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ CoreData: \(foods.count)")
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É–¥–∞–ª—è–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ —è–±–ª–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–∑–¥–∞—é—Ç—Å—è –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
                var applesToDelete = [Food]()
                
                // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞
                let lastScannedFoodID = UserDefaults.standard.string(forKey: "lastScannedFoodID")
                
                for food in foods {
                    // –ù–∞—Ö–æ–¥–∏–º —è–±–ª–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —è–≤–ª—è—é—Ç—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–º –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø—Ä–æ–¥—É–∫—Ç–æ–º
                    if let name = food.name?.lowercased(),
                       name == "apple",
                       let foodId = food.id?.uuidString,
                       foodId != lastScannedFoodID {
                        print("DEBUG - üçé –ù–∞–π–¥–µ–Ω–æ Apple –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ID=\(foodId)")
                        applesToDelete.append(food)
                    }
                }
                
                // –£–¥–∞–ª—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —è–±–ª–æ–∫–∏
                if !applesToDelete.isEmpty {
                    print("DEBUG - –£–¥–∞–ª—è–µ–º \(applesToDelete.count) —è–±–ª–æ–∫ –∏–∑ CoreData")
                    for apple in applesToDelete {
                        context.delete(apple)
                    }
                    try context.save()
                    
                    // –û—á–∏—â–∞–µ–º –∫—ç—à
                    context.refreshAllObjects()
                }
                
                if !foods.isEmpty {
                    for (index, food) in foods.enumerated() {
                        print("  \(index+1). \(food.name ?? "Unknown") (ID: \(food.id?.uuidString ?? "nil"), —Å–æ–∑–¥–∞–Ω: \(food.createdAt?.description ?? "nil"))")
                        
                        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç –µ—Å–ª–∏ ID —Å–æ–≤–ø–∞–¥–∞–µ—Ç
                        if let lastFoodID = UserDefaults.standard.string(forKey: "lastScannedFoodID"),
                           let foodId = food.id?.uuidString,
                           foodId == lastFoodID {
                            print("–ù–ê–ô–î–ï–ù –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤ NavigationCoordinator")
                            NavigationCoordinator.shared.recentlyScannedFood = food
                            
                            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
                            NotificationCenter.default.post(name: NSNotification.Name("FoodUpdated"), object: nil)
                        }
                    }
                }
            } catch {
                print("DEBUG - –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ CoreData: \(error)")
            }
        }
    }
}
